name: PR Checks

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]

jobs:
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install --package-lock-only
          npm ci

      - name: Run linting
        run: |
          echo "🔍 Running ESLint..."
          npm run lint

      - name: Run type checking
        run: |
          echo "🔍 Running TypeScript type checking..."
          npm run type-check

      - name: Run tests
        run: |
          echo "🧪 Running test suite..."
          npm test -- --coverage --watchAll=false

      - name: Build package
        run: |
          echo "🔨 Building package..."
          npm run build

      - name: Validate package
        run: |
          echo "📦 Validating package..."
          npm pack --dry-run

      - name: Check for breaking changes
        run: |
          echo "🔍 Checking for potential breaking changes..."

          # Check if main files exist
          if [ ! -f "dist/nodes/Pinterest/Pinterest.node.js" ]; then
            echo "❌ Main node file missing after build"
            exit 1
          fi

          if [ ! -f "dist/credentials/PinterestOAuth2Api.credentials.js" ]; then
            echo "❌ Credentials file missing after build"
            exit 1
          fi

          echo "✅ All required files present"

      - name: Comment PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('PR Validation Results')
            );

            const body = `## 🤖 PR Validation Results

            ✅ **All checks passed!**

            - **Linting:** Passed
            - **Tests:** Passed
            - **Build:** Passed
            - **Package Validation:** Passed

            This PR is ready for review! 🚀

            ---
            *This comment was automatically generated by the PR validation workflow.*`;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }
